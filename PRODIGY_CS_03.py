# -*- coding: utf-8 -*-
"""Intership.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ot0KpvOR4Lh6XhY-zWMKtVfrBnsej4Yz
"""

import re

def assess_password_strength(password):
    # Criteria checks
    length_criteria = len(password) >= 8
    uppercase_criteria = bool(re.search(r'[A-Z]', password))
    lowercase_criteria = bool(re.search(r'[a-z]', password))
    digit_criteria = bool(re.search(r'\d', password))
    special_criteria = bool(re.search(r'[!@#$%^&*(),.?":{}|<>]', password))

    # Strength calculation
    strength = 0
    feedback = []

    if length_criteria:
        strength += 1
    else:
        feedback.append("Password should be at least 8 characters long.")

    if uppercase_criteria:
        strength += 1
    else:
        feedback.append("Password should contain at least one uppercase letter.")

    if lowercase_criteria:
        strength += 1
    else:
        feedback.append("Password should contain at least one lowercase letter.")

    if digit_criteria:
        strength += 1
    else:
        feedback.append("Password should contain at least one digit.")

    if special_criteria:
        strength += 1
    else:
        feedback.append("Password should contain at least one special character.")

    # Password strength evaluation
    if strength == 5:
        feedback.append("Your password is strong.")
    elif 3 <= strength < 5:
        feedback.append("Your password is moderate.")
    else:
        feedback.append("Your password is weak.")

    return feedback

def main():
    print("Password Strength Assessment Tool")
    password = input("Enter your password: ")
    feedback = assess_password_strength(password)
    
    print("\nFeedback:")
    for f in feedback:
        print("-", f)

if __name__ == "__main__":
    main()
